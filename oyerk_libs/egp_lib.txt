@name Oyerk_Lib

#how to use this lib:

#[
    XWL:egpTextSize(N, S, XV2, N, V)
    Number Index, String Text, Vector2 Pos, Number Size, Vector Color
    Create a colored and sized egpText object.

    XWL:egpTextColor(N, S, XV2, N, V)
    Number Index, String Text, Vector2 Pos, Vector Color
    Creates a colored egpText object.
    
    XWL:egpBoxColor(N, XV2, XV2, V)
    Number Index, Vector2 Pos, Vector2 Size, Vector Color
    Creates a colored egpBox.
    
    XWL:egpBoxOutlineColor(N, XV2, XV2, V)
    Number Index, Vector2 Pos, Vector2 Size, Vector Color
    Creates a colored egpBoxOutline.
    
    XWL:egpPolyColor(N, R, V)
    Number Index, Array Args, Vector Color
    Creates a colored egpPoly with an array for polygon points.
    
    XWL:egpPolyOutlineColor(N, R, V)
    Number Index, Array Args, Vector Color
    Creates a colored egpPolyOutline with an array for polygon points.
    
    XWL:egpTouchingCursorSimple(N, E)
    Number Index, Entity Player
    Performs a simple check if the cursor is within the distance of the object's size, for simple collision checking.
    
    XWL:egpTouchingCursor(N, E)
    Number Index, Entity Player
    Checks if the player's cursor is within the X and Y bounds of the object size, for boxes and non-square objects.
    
    XWL:egpLineColor(N, XV2, XV2, V)
    Number Index, Vector2 Pos 1, Vector2 Pos 2, Vector Color
    Creates a colored egpLine.
    
    XWL:egpRoundedBoxColor(N, XV2, XV2, V)
    Number Index, Vector2 Pos, Vector2 Size, Vector Color
    Creates a colored egpRoundedBox.
]#

function wirelink:egpTextSize( Index:number, Text:string, Pos:vector2, Size:number, Color:vector ){
    This:egpText( Index, Text, Pos )
    This:egpFont( Index, "font", Size )
    This:egpColor( Index, Color )
}

function wirelink:egpTextSize( Index:number, Text:string, Pos:vector2, Size:number, Align:vector2, Color:vector ){
    This:egpText( Index, Text, Pos )
    This:egpFont( Index, "font", Size )
    This:egpColor( Index, Color )
    This:egpAlign( Index, Align:x(), Align:y() )
}

function wirelink:egpTextSize( Index:number, Text:string, Pos:vector2, Size:number ){
    This:egpText( Index, Text, Pos )
    This:egpFont( Index, "font", Size )
}

function wirelink:egpTextSize( Index:number, Text:string, Pos:vector2, Size:number, Align:vector2 ){
    This:egpText( Index, Text, Pos )
    This:egpFont( Index, "font", Size )
    This:egpAlign( Index, Align:x(), Align:y() )
}

function wirelink:egpTextSize( Index:number, Text:string, Pos:vector2, Size:number, Color:vector4 ){
    This:egpText( Index, Text, Pos )
    This:egpFont( Index, "font", Size )
    This:egpColor( Index, Color )
}

function wirelink:egpTextColor( Index:number, Text:string, Pos:vector2, Color:vector ){
    This:egpText( Index, Text, Pos )
    This:egpColor( Index, Color )
}

function wirelink:egpTextColor( Index:number, Text:string, Pos:vector2, Align:vector2, Color:vector ){
    This:egpText( Index, Text, Pos )
    This:egpColor( Index, Color )
    This:egpAlign( Index, Align:x(), Align:y() )
}

function wirelink:egpTextColor( Index:number, Text:string, Pos:vector2, Color:vector4 ){
    This:egpText( Index, Text, Pos )
    This:egpColor( Index, Color )
}

function wirelink:egpBoxColor( Index:number, Pos:vector2, Size:vector2, Color:vector ){
    This:egpBox( Index, Pos, Size )
    This:egpColor( Index, Color )
}

function wirelink:egpBoxColor( Index:number, Pos:vector2, Size:vector2, Color:vector4 ){
    This:egpBox( Index, Pos, Size )
    This:egpColor( Index, Color )
}

function wirelink:egpBoxOutlineColor( Index:number, Pos:vector2, Size:vector2, Color:vector ){
    This:egpBoxOutline( Index, Pos, Size )
    This:egpColor( Index, Color )
}

function wirelink:egpPolyColor( Index:number, Args:array, Color:vector ){
    This:egpPoly( Index, Args )
    This:egpColor( Index, Color )
}

function wirelink:egpPolyOutlineColor( Index:number, Args:array, Color:vector ){
    This:egpPolyOutline( Index, Args )
    This:egpColor( Index, Color )
}

function wirelink:egpTouchingCursorSimple( Index:number, EntCursor:entity ){
    local Cursor = This:egpCursor(EntCursor)
    local Size = This:egpSize( Index ):x()
    local ObjPos = This:egpPos( Index )
    if( Cursor:distance(ObjPos) <= Size ){
        return 1
    }else{
        return 0
    }
}

function wirelink:egpTouchingCursor( Index:number, EntCursor:entity ){
    local Cursor = This:egpCursor(EntCursor)
    local Size = This:egpSize( Index )
    local ObjPos = This:egpPos( Index )
    if( abs( Cursor:x() - ObjPos:x() ) <= Size:x()/2 & abs( Cursor:y() - ObjPos:y() ) <= Size:y()/2 ){
        return 1
    }else{
        return 0
    }
}

function wirelink:egpLineColor( Index:number, Pos1:vector2, Pos2:vector2, Color:vector ){
    This:egpLine( Index, Pos1, Pos2 )
    This:egpColor( Index, Color )
}

function wirelink:egpCircleColor( Index:number, Pos:vector2, Size:vector2, Color:vector ){
    This:egpCircle( Index, Pos, Size )
    This:egpColor( Index, Color )
}

function wirelink:egpCircleOutlineColor( Index:number, Pos:vector2, Size:vector2, Color:vector ){
    This:egpCircleOutline( Index, Pos, Size )
    This:egpColor( Index, Color )
}

function wirelink:egpRoundedBoxColor( Index:number, Pos:vector2, Size:vector2, Color:vector ){
    This:egpRoundedBox( Index, Pos, Size )
    This:egpColor( Index, Color )
}

function vec(A:number, B:number){
    #this isnt meant to be useful, its just a shorthand when you fuck up making a vector2 lol
    print("Mistype detected.\nYou typed vec(N,N) instead of vec2(N,N).")
    return vec2(A, B)
}
